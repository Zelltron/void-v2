@mixin for-size($range) {
  $phone-upper-boundary: 600px;
  $tablet-portrait-upper-boundary: 900px;
  $tablet-landscape-upper-boundary: 1200px;
  $desktop-upper-boundary: 1800px;
  @if $range == phone-only {
     @media (max-width: #{$phone-upper-boundary - 1}){
      @content;
    }
  }
  @else if $range == tablet-portrait-up {
     @media (min-width: $phone-upper-boundary){
      @content;
    }
  }
  @else if $range == tablet-landscape-up {
     @media (min-width: $tablet-portrait-upper-boundary){
      @content;
    }
  }
  @else if $range == desktop-up {
     @media (min-width: $tablet-landscape-upper-boundary){
      @content;
    }
  }
  @else if $range == big-desktop-up {
     @media (min-width: $desktop-upper-boundary){
      @content;
    }
  }
}
// usage
// .my-box {
//   padding: 10px;
//
//   @include for-size(desktop-up) {
//     padding: 20px;
//   }
// }

.App {
  text-align: center;
}

.App-logo {
  animation: App-logo-spin infinite 20s linear;
  height: 80px;
}

.App-header {
  background-color: #222;
  height: 150px;
  padding: 20px;
  color: white;
}

.App-title {
  font-size: 1.5em;
}

.App-intro {
  font-size: large;
}
@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}
@font-face {
  font-family: c64;
  src: url("./Commodore64.ttf") format('truetype');
}
@font-face {
  font-family: gameOver;
  src: url("./Game_Over.otf") format('opentype');
}

.boxText {
  color: #d85c6f;
  font-family: c64;
}

#welcome {
  font-family: gameOver;
  font-size: 2em;
  margin: 0;
  padding: 0;
  width: 100%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

#command-form {
  position: absolute;
  display: inline-flex;
  bottom: 0;
  opacity: 0;
  color: #d85c6f;
  font-family: c64;
  width: 80%;
  padding-left: 10%;
  padding-right: 10%;
  padding-bottom: 2.5em;
  font-size: 1.2em;
}

input[type="text"] {
  font-size: 1.5em;
  font-family: c64;
  background: transparent;
  border: none;
  color: #d85c6f;
}

.body {
  height: 100%;
  width: 100%;
  background-color: #08E7B9;
  //      background: linear-gradient(
  // rgba(0, 106, 160, 0.35),
  // rgba(0, 106, 160, 0.35)
  // ), url(./rainCity.png) center center;
  position: absolute;
  left: 0;
  top: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

button:focus,
input:focus,
select:focus,
textarea:focus {
  outline: none;
}

#frame {
  position: absolute;
  height: 100%;
  width: 100%;
  z-index: 1;
  pointer-events: none;
}

.centerBox {
  position: absolute;
  z-index: 0;
  width: 100%;
  height: 100%;
  background-color: #16123A;
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
  display: flex;
  justify-content: space-between;
}

#textHolder {
  font-size: 2em;
  width: 80%;
  padding-left: 10%;
  padding-right: 10%;
}

.txt {
  position: absolute;
  padding: 0 0.5em 0.5em;
  @include for-size(phone-only) {
    text-align: center;
    width: 80%;
    padding-left: 10%;
    padding-right: 10%;
    left: 0;
  }
}

.question {
  position: absolute;
  padding: 0 0.5em 0.5em;
  @include for-size(phone-only) {
    text-align: center;
    width: 80%;
    padding-left: 10%;
    padding-right: 10%;
    left: 0;
  }
}

#loading {
  margin: 0;
  height: 100%;
  width: 100%;
  float: right;
  align-self: flex-end;
  opacity: 0;
}

.char {
  visibility: hidden;
}

.tint:before {
  content: "";
  display: block;
  /*position: absolute;*/
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: #16123A;
  transition: all 0.3s linear;
}

#void-name {
  display: none;
  text-align: center;
  margin-top: 1em;
  @include for-size(phone-only) {
    text-align: center;
    margin-top: 1em;
    position: absolute;
    width: 100%;
    left: 0;
    font-size: 1em;
  }
}

#command-input {
  width: 100%;
  padding: 0.5em;
}

#enter-submit {
  -webkit-appearance: none;
  border-radius: 0;
  background-color: #fff;
  font-family: c64;
  box-shadow: -2px -1px 1px 1px black;
}

#images {
  position: absolute;
  top: 30%;
}
/* REGULAR SCANLINES SETTINGS */
// width of 1 scanline (min.: 1px)
$scan-width: 2px;
// emulates a damage-your-eyes bad pre-2000 CRT screen ♥ (true, false)
$scan-crt: true;
// frames-per-second (should be > 1), only applies if $scan-crt: true;
$scan-fps: 60;
// scanline-color (rgba)
$scan-color: rgba(#000, .3);
// set z-index on 8, like in ♥ 8-bits ♥, or…
// set z-index on 2147483648 or more to enable scanlines on Chrome fullscreen (doesn't work in Firefox or IE);
$scan-z-index: 2147483648;
/* MOVING SCANLINE SETTINGS */
// moving scanline (true, false)
$scan-moving-line: true;
// opacity of the moving scanline
$scan-opacity: 0.75;
/* MIXINS */
// apply CRT animation: @include scan-crt($scan-crt);
@mixin scan-crt($scan-crt) {
   @if $scan-crt == true{
    animation: scanlines 1s steps($scan-fps) infinite;
  }
  @else {
    animation: none;
  }
}
// apply CRT animation: @include scan-crt($scan-crt);
@mixin scan-moving($scan-moving-line) {
   @if $scan-moving-line == true{
    animation: scanline 6s linear infinite;
  }
  @else {
    animation: none;
  }
}
/* CSS .scanlines CLASS */
.scanlines {
  position: relative;
  overflow: hidden; // only to animate the unique scanline
  height: 100%;
  width: 100%;
  z-index: 1000;

  &:after,
  &:before {
    display: block;
    pointer-events: none;
    content: '';
    position: absolute;
  }
  // unique scanline travelling on the screen
  &:before {
    // position: absolute;
    // bottom: 100%;
    width: 100%;
    height: $scan-width * 1;
    z-index: $scan-z-index + 1;
    background: $scan-color;
    opacity: $scan-opacity;
    // animation: scanline 6s linear infinite;
    @include scan-moving($scan-moving-line);
  }
  // the scanlines, so!
  &:after {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: $scan-z-index;
    background: linear-gradient( to bottom, transparent 50%, $scan-color 51% );
    background-size: 100% $scan-width*2;
    @include scan-crt($scan-crt);
  }
}
/* ANIMATE UNIQUE SCANLINE */
@keyframes scanline {
  0% {
    transform: translate3d(0,200000%,0);
    // bottom: 0%; // to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }
  }
}
@keyframes scanlines {
  0% {
    background-position: 0 50%;
    // bottom: 0%; // to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }
  }
}

.jpg {
  background: url('http://images.eurogamer.net/articles//a/6/4/8/8/1/7/PC_003.jpg.jpg.jpg') no-repeat;
  background-size: cover;
}
// *{
//   box-sizing:border-box;
//   margin:0;
//   padding:0;
// }
//
// html,body{
//   width:100%;
//   height:100%;
// }
//
// html{
//   background-image: -webkit-radial-gradient(circle, rgba(0,0,5,1), rgba(0,0,0,1));
//   overflow:hidden;
// }

.space {
  position: absolute;
  top: 0;
  left: 0;
  background-image: radial-gradient(white, rgba(255,255,255,.2) 2px, transparent 10px), radial-gradient(white, rgba(255,255,255,.15) 1px, transparent 10px), radial-gradient(white, rgba(255,255,255,.1) 2px, transparent 10px), radial-gradient(rgba(255,255,255,.4), rgba(255,255,255,.1) 2px, transparent 10px);
  background-size: 550px 550px, 350px 350px, 250px 250px, 150px 150px;
  background-position: 0 0, 40px 30px, 130px 270px, 70px 100px;
  animation: spin 25s linear infinite;
  width: 200%;
  height: 400%;
  margin: -100% 0 0 -50%;
  opacity: 0.6;
  z-index: -1;
  display: none;
}

.space-container {
  width: 100%;
  height: 100%;
  vertical-align: middle;
  text-align: center;
  position: absolute;
  justify-content: center;
  align-items: center;
  z-index: -1;
  display: none;
}
// .container:before{
//   content: '';
// display: inline-block;
// height: 100%;
// vertical-align: middle;
// margin-right: -0.25em;
//
// }

.space-wrapper {
  position: relative;
  display: inline-block;
  height: auto;
  vertical-align: middle;
  margin: 0 auto;
  text-align: center;
}

.blackhole {
  position: relative;
  display: inline-block;
  width: 100px;
  height: 100px;
  margin: 0 auto;
  border: 4px solid rgba(0,0,0,1);
  border-radius: 50%;
  animation: spin 3s infinite linear;
  background: #000;
  box-shadow: 0 0 50px 50px rgba(0,0,0,1);
}

.debris {
  position: absolute;
  top: 160%;
  left: 100%;
  width: 10px;
  height: 10px;
  margin: -5px 0 0 -5px;
  background: rgba(255,255,255,1);
  border-radius: 50%;
  animation: drain 5s infinite ease-in;
}

.debris + .debris {
  left: 100%;
  animation-delay: 1200ms;
  transform: scale(.7);
  animation-speed: 7s;
}

.debris + .debris + .debris {
  top: 0;
  left: 185%;
  animation-delay: 500ms;
  transform: scale(.8);
  animation-speed: 4s;
}

.debris + .debris + .debris + .debris {
  top: 200%;
  left: 250%;
  animation-delay: 700ms;
  transform: scale(.4);
  animation-speed: 2s;
}

.debris + .debris + .debris + .debris + .debris {
  top: 150%;
  left: 330%;
  animation-delay: 200ms;
  transform: scale(.5);
}

.debris + .debris + .debris + .debris + .debris + .debris {
  top: -380%;
  left: -300%;
  animation-delay: 2000ms;
  transform: scale(.7);
  animation-speed: 6s;
}

.debris + .debris + .debris + .debris + .debris + .debris + .debris {
  top: 400%;
  left: 200%;
  animation-delay: 3000ms;
  transform: scale(.3);
}

.debris + .debris + .debris + .debris + .debris + .debris + .debris + .debris {
  top: 500%;
  left: 180%;
  animation-delay: 400ms;
  transform: scale(1.2);
}
@keyframes drain {
  95% {
    opacity: 1;
  }

  to {
    top: 50%;
    left: 50%;
    opacity: 0;
  }
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.mainscreen {
  display: none;
}

.tv {
  height: 200px;
}

.octo {
  height: 50px;
  filter: invert(1);
}

.linked {
  height: 50px;
}
